{
    "patches": [
        {
            "label": "2025-09-29_16-10-07",
            "content": "@@ -59,17 +59,16 @@\n as: int)\n-:\n %0A    sel\n@@ -139,19 +139,16 @@\n %0A    %0A%0A%0A\n-%0A%0A%0A\n     def \n",
            "lines": "10"
        },
        {
            "label": "2025-09-29_16-11-39",
            "content": "@@ -61,20 +61,16 @@\n : int):%0A\n-    \n     self\n@@ -87,28 +87,24 @@\n  = pass%0A    \n-  \n-  \n self.km: int\n@@ -109,20 +109,16 @@\n nt = km%0A\n-    \n     self\n",
            "lines": "13"
        },
        {
            "label": "2025-09-29_16-12-14",
            "content": "@@ -154,16 +154,17 @@\n    %0A%0A%0A%0A%0A\n+%0A\n     def \n",
            "lines": "13"
        },
        {
            "label": "2025-09-29_16-14-03",
            "content": "@@ -78,33 +78,36 @@\n elf.pass: int = \n-0\n+pass\n %0A        self.km\n@@ -110,25 +110,26 @@\n f.km: int = \n-0\n+km\n %0A        sel\n@@ -145,9 +145,11 @@\n t = \n-0\n+gas\n %0A   \n",
            "lines": "12"
        },
        {
            "label": "2025-09-29_16-19-08",
            "content": "@@ -30,31 +30,24 @@\n  (self, pass\n-ageiros\n : int, km: i\n@@ -82,23 +82,16 @@\n pass\n-ageiros\n : int = \n pass\n@@ -86,27 +86,17 @@\n : int = \n-passageiros\n+0\n %0A       \n@@ -111,18 +111,17 @@\n : int = \n-km\n+0\n %0A       \n@@ -137,19 +137,17 @@\n : int = \n-gas\n+0\n %0A    %0A%0A%0A\n@@ -178,16 +178,16 @@\n -%3E str:%0A\n+\n         \n@@ -214,15 +214,8 @@\n pass\n-ageiros\n %7D, g\n",
            "lines": "12"
        },
        {
            "label": "2025-09-29_16-21-08",
            "content": "@@ -1,40 +1,4 @@\n-gasMax: int = 100%0ApassMax: int = 2%0A%0A\n clas\n@@ -65,35 +65,8 @@\n gas:\n- int, gasMax: int, passMax:\n  int\n@@ -92,33 +92,43 @@\n sageiros: int = \n-0\n+passageiros\n %0A        self.km\n@@ -135,17 +135,18 @@\n : int = \n-0\n+km\n %0A       \n@@ -166,181 +166,18 @@\n t = \n-0%0A%0A    def enter(self):%0A        if self.passageiros %3E= self.passMax():%0A            print(%22fail: limite de pessoas atingido%22)%0A        else:%0A             self.passageiros += 1\n+gas%0A    %0A%0A\n %0A%0A%0A \n",
            "lines": "12"
        },
        {
            "label": "2025-09-29_19-59-51",
            "content": "@@ -219,69 +219,8 @@\n  = 0\n-%0A        self.gasMax: int = 100%0A        self.passMax: int = 2\n %0A%0A  \n@@ -281,16 +281,18 @@\n .passMax\n+()\n :%0A      \n",
            "lines": "18"
        },
        {
            "label": "2025-09-29_20-02-25",
            "content": "@@ -451,119 +451,8 @@\n = 1%0A\n-    %0A    def leave(self):%0A        if self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A\n %0A%0A  \n",
            "lines": "20"
        },
        {
            "label": "2025-09-29_20-06-53",
            "content": "@@ -505,9 +505,9 @@\n ros \n-%3C\n+=\n = 0:\n@@ -562,60 +562,8 @@\n o%22)%0A\n-        else self.passageiros -= 1:%0A%0A    def show():\n %0A%0A  \n",
            "lines": "24"
        },
        {
            "label": "2025-09-29_20-32-34",
            "content": "@@ -570,29 +570,16 @@\n     else\n-:%0A           \n  self.pa\n@@ -592,16 +592,17 @@\n ros -= 1\n+:\n %0A%0A    de\n",
            "lines": "26"
        },
        {
            "label": "2025-09-29_20-33-36",
            "content": "@@ -281,104 +281,8 @@\n = 2%0A\n- %0A     def __str__(self):%0A        return f%22pass:%7Bself.passageiros%7D, gas:%7Bgas%7D km:%7Bself.km%7D%22%0A    \n %0A   \n@@ -622,8 +622,105 @@\n  show():\n+%0A%0A    def __str__(self) -%3E str:%0A        return f%22pass:%7Bself.passageiros%7D, gas:%7Bgas%7D km:%7Bself.km%7D%22\n",
            "lines": "27"
        },
        {
            "label": "2025-09-29_20-36-45",
            "content": "@@ -722,21 +722,4 @@\n w():\n-%0A%0A    def main():\n",
            "lines": "27"
        },
        {
            "label": "2025-09-29_20-37-24",
            "content": "@@ -720,35 +720,10 @@\n how(\n-self):%0A        print (self\n )\n+:\n %0A%0A  \n",
            "lines": "29"
        },
        {
            "label": "2025-09-29_20-39-25",
            "content": "@@ -206,21 +206,16 @@\n self.gas\n-olina\n : int = \n@@ -305,15 +305,8 @@\n elf)\n- -%3E str\n :%0A  \n@@ -357,13 +357,8 @@\n %7Bgas\n-olina\n %7D km\n",
            "lines": "30"
        },
        {
            "label": "2025-09-30_14-33-21",
            "content": "@@ -1,8 +1,42 @@\n+gasMax: int = 100%0ApassMax: int = 2\n %0A%0Aclass \n@@ -206,16 +206,21 @@\n self.gas\n+olina\n : int = \n@@ -230,27 +230,26 @@\n        self.\n-pas\n+ga\n sMax: int = \n@@ -248,17 +248,19 @@\n : int = \n-2\n+100\n %0A       \n@@ -257,34 +257,35 @@\n 00%0A        self.\n-ga\n+pas\n sMax: int 100 %0A%0A\n@@ -282,16 +282,15 @@\n int \n-100 %0A\n+= 2\n %0A %0A\n+ \n     \n@@ -362,24 +362,24 @@\n %7D, gas:%7B\n-self.gas\n+gasolina\n %7D km:%7Bse\n@@ -779,12 +779,6 @@\n ain(\n-self):%0A%0A\n+):\n",
            "lines": "30"
        },
        {
            "label": "2025-09-30_15-02-20",
            "content": "@@ -236,18 +236,16 @@\n Max: int\n- =\n  100 %0A%0A \n",
            "lines": "31"
        },
        {
            "label": "2025-09-30_15-05-10",
            "content": "@@ -1,8 +1,10 @@\n+%0A%0A\n class Ca\n@@ -250,53 +250,8 @@\n  %0A%0A \n-   %0A    def show(self):%0A        print (self)%0A\n %0A   \n@@ -694,56 +694,59 @@\n def \n-fuel\n+show\n (self\n-, increment):%0A        self.gas %0A    %0A%0A    \n+):%0A        print (self)%0A%0A    def main(self):%0A\n %0A\n",
            "lines": "31"
        },
        {
            "label": "2025-09-30_15-28-14",
            "content": "@@ -737,170 +737,53 @@\n def \n-abastecer(self):%0A        self.gas += self.gasMax%0A        if self.gas %3E= self.gasMax:%0A            self.gas = self.gasMax%0A        %0A    def drive(self):%0A        if %0A\n+fuel(self, increment):%0A        self.gas %0A    \n %0A%0A  \n",
            "lines": "32"
        },
        {
            "label": "2025-09-30_15-48-53",
            "content": "@@ -895,235 +895,11 @@\n     \n-%0A        if self.passageiros == 0:%0A            print(%22fail: n%C3%A3o ha ninguem no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        else:%0A            print(%22fail: tanque vazio  apos andar %7Bkm%7D km%22)\n+if \n %0A%0A%0A \n",
            "lines": "37"
        },
        {
            "label": "2025-09-30_15-56-00",
            "content": "@@ -875,32 +875,41 @@\n ef drive(self):%0A\n+        %0A\n         if self.\n@@ -1123,21 +1123,8 @@\n m%22)%0A\n-            %0A\n %0A%0A  \n",
            "lines": "43"
        },
        {
            "label": "2025-10-02_08-06-59",
            "content": "@@ -29,16 +29,53 @@\n _ (self,\n+ passageiros: int, km: int, gas: int,\n  gasMax:\n@@ -82,14 +82,8 @@\n  int\n- = 100\n , pa\n@@ -96,12 +96,8 @@\n  int\n- = 2\n ):%0A \n@@ -142,27 +142,18 @@\n    self.\n-quilometros\n+km\n : int = \n@@ -208,23 +208,17 @@\n : int = \n-passMax\n+2\n %0A       \n@@ -237,22 +237,67 @@\n : int = \n-gasMax\n+100 %0A%0A    %0A    def show(self):%0A        print (self)\n %0A%0A    de\n@@ -390,68 +390,17 @@\n elf.\n-quilometros%7D%22%0A    %0A    def show(self):%0A        print (self)%0A\n+km%7D%22%0A    \n %0A   \n@@ -1105,19 +1105,10 @@\n ar %7B\n-quilometros\n+km\n %7D km\n",
            "lines": "43"
        },
        {
            "label": "2025-10-04_15-10-39",
            "content": "@@ -745,18 +745,8 @@\n self\n-, qtd: int\n ):%0A \n@@ -768,11 +768,19 @@\n  += \n-qtd\n+self.gasMax\n %0A   \n@@ -878,24 +878,8 @@\n self\n-, distancia: int\n ):%0A \n@@ -962,32 +962,34 @@\n carro%22)%0A        \n+el\n if self.gas == 0\n@@ -1042,254 +1042,13 @@\n     \n-if self.gas %3C distancia:%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.quilometros += self.gas%0A            self.gas = 0%0A        else:%0A            self.gas -= distancia%0A            self.quilometros += distancia\n+else:\n %0A   \n",
            "lines": "42"
        },
        {
            "label": "2025-10-04_15-24-35",
            "content": "@@ -1382,20 +1382,12 @@\n     \n-%0Adef main():\n+    \n %0A%0A%0A \n",
            "lines": "48"
        },
        {
            "label": "2025-10-04_15-25-38",
            "content": "@@ -1393,14 +1393,13 @@\n in():%0A%0A%0A\n-main()\n+    %0A\n",
            "lines": "49"
        },
        {
            "label": "2025-10-04_15-26-01",
            "content": "@@ -1395,28 +1395,12 @@\n ():%0A\n-    carro = Carro(0, 0)%0A\n+%0A%0Amain()\n",
            "lines": "49"
        },
        {
            "label": "2025-10-04_15-29-09",
            "content": "@@ -1419,188 +1419,4 @@\n  0)%0A\n-    while True:%0A        line: int(input())%0A        args: list = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(carro)\n",
            "lines": "47"
        },
        {
            "label": "2025-10-04_15-34-13",
            "content": "@@ -1383,16 +1383,224 @@\n    %0A\n-carro.show(\n+def main():%0A    carro = Carro(0, 0)%0A    while True:%0A        line: int(input())%0A        args: list = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(carro\n )\n",
            "lines": "55"
        },
        {
            "label": "2025-10-04_15-37-11",
            "content": "@@ -1374,50 +1374,16 @@\n m%22)%0A\n-%0Adef main():%0A    carro = Carro(%22 %22, %22 %22) %0A\n+        \n %0Acar\n",
            "lines": "46"
        },
        {
            "label": "2025-10-04_15-38-31",
            "content": "@@ -1405,12 +1405,16 @@\n rro(\n-0, 0\n+%22 %22, %22 %22\n ) %0A%0A\n",
            "lines": "49"
        },
        {
            "label": "2025-10-04_15-39-00",
            "content": "@@ -1425,13 +1425,4 @@\n ow()\n-%0A%0A%0Amain()\n",
            "lines": "49"
        },
        {
            "label": "2025-10-04_15-39-49",
            "content": "@@ -1401,16 +1401,20 @@\n = Carro(\n+0, 0\n ) %0A%0Acarr\n",
            "lines": "52"
        },
        {
            "label": "2025-10-04_15-40-23",
            "content": "@@ -1411,21 +1411,20 @@\n %0A%0Acarro.\n-enter\n+show\n ()%0A%0A%0Amai\n",
            "lines": "52"
        },
        {
            "label": "2025-10-04_15-40-51",
            "content": "@@ -1,1457 +1,91 @@\n-class Carro:%0A    def __init__ (self, gasMax: int = 100, passMax: int = 2):%0A        self.passageiros: int = 0%0A        self.quilometros: int = 0%0A        self.gas: int = 0%0A        self.passMax: int = passMax%0A        self.gasMax: int = gasMax%0A%0A    def __str__(self) -%3E str:%0A        return f%22pass:%7Bself.passageiros%7D, gas:%7Bself.gas%7D km:%7Bself.quilometros%7D%22%0A    %0A    def show(self):%0A        print (self)%0A%0A    def enter(self):%0A        if self.passageiros %3E= self.passMax:%0A            print(%22fail: limite de pessoas atingido%22)%0A        else:%0A             self.passageiros += 1%0A    %0A    def leave(self):%0A        if self.passageiros %3C= 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        else:%0A            self.passageiros -= 1%0A%0A    def abastecer(self, qtd: int):%0A        self.gas += qtd%0A        if self.gas %3E= self.gasMax:%0A            self.gas = self.gasMax%0A        %0A    def drive(self, distancia: int):%0A        if self.passageiros == 0:%0A            print(%22fail: n%C3%A3o ha ninguem no carro%22)%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        if self.gas %3C distancia:%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.quilometros += self.gas%0A            self.gas = 0%0A        else:%0A            self.gas -= distancia%0A            self.quilometros += distancia%0A            print(%22fail: tanque vazio  apos andar %7Bquilometros%7D km%22)%0A%0Adef main():%0A    carro = Carro() %0A    while True:%0A        line: int = int()%0A\n+@@ -1408,488 +1408,22 @@%0A () %250A%0A-    while True:%250A        line: int = int(input())%250A\n     \n@@ -116,14 +116,22 @@\n lit(\n-%22 %22)%0A%0A\n+%2522 %2522)%250A%250A\n     \n@@ -145,22 +145,32 @@\n args\n-%5B0%5D == %22end%22:%0A\n+%255B0%255D == %2522end%2522:%250A\n     \n@@ -182,17 +182,19 @@\n    break\n-%0A\n+%250A\n         \n@@ -206,25 +206,35 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n enter\n-%22: %0A\n+%2522: %250A\n     \n@@ -263,12 +263,18 @@\n args\n-%5B1%5D%0A\n+%255B1%255D%250A\n     \n@@ -295,12 +295,18 @@\n args\n-%5B2%5D%0A\n+%255B2%255D%250A\n     \n@@ -344,17 +344,19 @@\n os, gas)\n-%0A\n+%250A\n         \n@@ -368,23 +368,33 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n show\n-%22:%0A\n+%2522:%250A\n     \n@@ -413,17 +413,19 @@\n t(carro)\n-%0A\n+%250A\n         \n@@ -437,24 +437,34 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n fuel\n-%22: %0A\n+%2522: %250A\n     \n@@ -489,13 +489,19 @@\n args\n-%5B1%5D)%0A\n+%255B1%255D)%250A\n     \n@@ -520,17 +520,19 @@\n ha.(qtd)\n-%0A\n+%250A\n         \n@@ -536,17 +536,19 @@\n    else:\n-%0A\n+%250A\n         \n@@ -557,17 +557,19 @@\n   print(\n-%22\n+%2522\n fail: co\n@@ -590,16 +590,42 @@\n cido\n-%22)%0A%0A%0A%0Amain()\n+%2522)%250A%0A+%250Acarro.enter()%0A %250A%250A%250Am%0A\n",
            "lines": "5"
        },
        {
            "label": "2025-10-04_15-52-02",
            "content": "@@ -1419,16 +1419,475 @@\n le True:%0A       \n+ line: int = int()%0A        args: list = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22enter%22: %0A            passageiros = args%5B1%5D%0A            gas = args%5B2%5D%0A            carro = Carro(passageiros, gas)%0A        elif args%5B0%5D == %22show%22:%0A            print(carro)%0A        elif args%5B0%5D == %22fuel%22: %0A            qtd = int(args%5B1%5D)%0A            toalha.(qtd)%0A        else:%0A            print(%22fail: comando desconhecido%22)%0A%0A%0A%0Amain()\n",
            "lines": "68"
        },
        {
            "label": "2025-10-04_15-55-21",
            "content": "@@ -1424,10 +1424,11 @@\n ue:%0A\n-%0A$show\n+       \n",
            "lines": "49"
        },
        {
            "label": "2025-10-04_15-55-53",
            "content": "@@ -1420,8 +1420,14 @@\n e True:%0A\n+%0A$show\n",
            "lines": "50"
        },
        {
            "label": "2025-10-04_15-56-00",
            "content": "@@ -1404,8 +1404,24 @@\n arro() %0A\n+    while True:%0A\n",
            "lines": "48"
        },
        {
            "label": "2025-10-04_15-56-30",
            "content": "@@ -980,35 +980,16 @@\n carro%22)%0A\n-            return%0A\n         \n@@ -1058,91 +1058,92 @@\n     \n-    return%0A        if distancia %3E self.gas:%0A            self.quilometros = \n+if self.gas %3C distancia:%0A            print(f%22fail: tanque vazio apos andar %7B\n self.gas\n %0A   \n@@ -1138,16 +1138,22 @@\n self.gas\n+%7D km%22)\n %0A       \n@@ -1166,43 +1166,22 @@\n elf.\n-gas += self.quilometros%0A           \n+quilometros +=\n  sel\n@@ -1185,20 +1185,16 @@\n self.gas\n- = 0\n %0A       \n@@ -1202,55 +1202,16 @@\n     \n-print(f%22fail: tanque vazio apos andar %7B\n self.gas\n %7D km\n@@ -1198,38 +1198,36 @@\n         self.gas\n-%7D km%22)\n+ = 0\n %0A        else:%0A \n@@ -1405,573 +1405,7 @@\n rro(\n-0, 0)%0A    while True:%0A        line: (str) = input()%0A        print(%22$%22, end=%22%22)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        const par = line.split(%22 %22);%0A        const cmd = par%5B0%5D;%0A%0A        if (cmd == %22end%22) %7B%0A            break;%0A        %7D %0A        elif == %22show%22:%0A%0A        elif == %22enter%22:%0A        %0A        elif == %22leave%22:%0A%0A        elif == %22fuel%22:%0A           (par%5B1%5D)%0A        elif  == %22drive%22:%0A            // TENTE DIRIGIR CERTA DISTANCIA%0A            // const distance = parseInt(par%5B1%5D):%0A        else:%0A            print(%22fail: comando invalido%22)%0A        %0Amain()\n+) %0A\n",
            "lines": "47"
        },
        {
            "label": "2025-10-05_18-10-17",
            "content": "@@ -947,33 +947,33 @@\n   print(%22fail: n\n-a\n+%C3%A3\n o ha ninguem no \n@@ -1129,25 +1129,32 @@\n         \n-distancia\n+self.quilometros\n  = self.\n@@ -1479,16 +1479,20 @@\n = Carro(\n+0, 0\n )%0A    wh\n@@ -1609,26 +1609,89 @@\n         \n-if args%5B0%5D\n+const par = line.split(%22 %22);%0A        const cmd = par%5B0%5D;%0A%0A        if (cmd\n  == %22end\n@@ -1691,17 +1691,19 @@\n == %22end%22\n-:\n+) %7B\n %0A       \n@@ -1712,16 +1712,17 @@\n    break\n+;\n %0A       \n@@ -1726,56 +1726,35 @@\n     \n-elif args%5B0%5D == %22show%22:%0A            carro.\n+%7D %0A        elif == %22\n show\n-()\n+%22:%0A\n %0A   \n@@ -1758,32 +1758,24 @@\n         elif\n- args%5B0%5D\n  == %22enter%22:\n@@ -1787,25 +1787,8 @@\n     \n-    \n-carro.enter()\n %0A   \n@@ -1792,32 +1792,24 @@\n         elif\n- args%5B0%5D\n  == %22leave%22:\n@@ -1813,33 +1813,8 @@\n e%22:%0A\n-            carro.leave()\n %0A   \n@@ -1818,32 +1818,24 @@\n         elif\n- args%5B0%5D\n  == %22fuel%22:%0A\n@@ -1849,163 +1849,137 @@\n     \n- qtd = int(args%5B1%5D)%0A            carro.abastecer(qtd)%0A        elif args%5B0%5D == %22drive%22:%0A            distance = int(args%5B1%5D)%0A            carro.drive(distance)\n+(par%5B1%5D)%0A        elif  == %22drive%22:%0A            // TENTE DIRIGIR CERTA DISTANCIA%0A            // const distance = parseInt(par%5B1%5D):\n %0A   \n@@ -2026,22 +2026,27 @@\n ndo \n-desconhecido%22)\n+invalido%22)%0A        \n %0Amai\n",
            "lines": "76"
        },
        {
            "label": "2025-10-05_18-24-26",
            "content": "@@ -319,17 +319,16 @@\n elf.gas%7D\n-,\n  km:%7Bsel\n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_18-26-14",
            "content": "@@ -1163,25 +1163,24 @@\n         \n-distancia\n+self.gas\n  += self\n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_18-26-55",
            "content": "@@ -1274,26 +1274,18 @@\n r %7Bself.\n-quilometro\n+ga\n s%7D km%22)%0A\n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_18-27-14",
            "content": "@@ -1130,30 +1130,25 @@\n         \n-km_percorridos\n+distancia\n  = self.\n@@ -1154,32 +1154,45 @@\n .gas%0A           \n+ distancia +=\n  self.quilometro\n@@ -1196,26 +1196,8 @@\n tros\n- += km_percorridos\n %0A   \n@@ -1273,20 +1273,22 @@\n ar %7B\n-km_percorrid\n+self.quilometr\n os%7D \n@@ -1404,53 +1404,59 @@\n int(\n-f%22andou %7Bdistancia%7D km com sucesso%22)%0A        \n+%22fail: tanque vazio  apos andar %7Bquilometros%7D km%22)%0A\n %0Adef\n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_18-32-52",
            "content": "@@ -285,17 +285,16 @@\n  f%22pass:\n- \n %7Bself.pa\n@@ -309,17 +309,16 @@\n s%7D, gas:\n- \n %7Bself.ga\n@@ -324,17 +324,16 @@\n as%7D, km:\n- \n %7Bself.qu\n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_22-25-52",
            "content": "@@ -1556,15 +1556,16 @@\n (%22$%22\n- + line\n+, end=%22%22\n )%0A  \n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_22-26-36",
            "content": "@@ -2091,21 +2091,8 @@\n o%22)%0A\n-            %0A\n main\n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_22-34-29",
            "content": "@@ -1321,36 +1321,32 @@\n se:%0A            \n-    \n self.gas -= dist\n@@ -1343,36 +1343,32 @@\n as -= distancia%0A\n-    \n             self\n@@ -1385,36 +1385,32 @@\n os += distancia%0A\n-    \n             prin\n@@ -2087,15 +2087,27 @@\n ecido%22)%0A\n+            \n %0Amain()\n",
            "lines": "73"
        },
        {
            "label": "2025-10-05_22-37-57",
            "content": "@@ -1135,17 +1135,18 @@\n       km\n-P\n+_p\n ercorrid\n@@ -1193,17 +1193,18 @@\n os += km\n-P\n+_p\n ercorrid\n@@ -1288,9 +1288,10 @@\n  %7Bkm\n-P\n+_p\n erco\n@@ -1321,32 +1321,36 @@\n se:%0A            \n+  \n+  \n self.gas -= dist\n@@ -1347,32 +1347,36 @@\n as -= distancia%0A\n+    \n             self\n@@ -1393,32 +1393,36 @@\n os += distancia%0A\n+    \n             prin\n",
            "lines": "73"
        },
        {
            "label": "2025-10-05_22-42-59",
            "content": "@@ -1,2044 +1,112 @@\n-class Carro:%0A    def __init__ (self, gasMax: int = 100, passMax: int = 2):%0A        self.passageiros: int = 0%0A        self.quilometros: int = 0%0A        self.gas: int = 0%0A        self.passMax: int = passMax%0A        self.gasMax: int = gasMax%0A%0A    def __str__(self) -%3E str:%0A        return f%22pass: %7Bself.passageiros%7D, gas: %7Bself.gas%7D, km: %7Bself.quilometros%7D%22%0A    %0A    def show(self):%0A        print (self)%0A%0A    def enter(self):%0A        if self.passageiros %3E= self.passMax:%0A            print(%22fail: limite de pessoas atingido%22)%0A        else:%0A             self.passageiros += 1%0A    %0A    def leave(self):%0A        if self.passageiros %3C= 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        else:%0A            self.passageiros -= 1%0A%0A    def abastecer(self, qtd: int):%0A        self.gas += qtd%0A        if self.gas %3E= self.gasMax:%0A            self.gas = self.gasMax%0A        %0A    def drive(self, distancia: int):%0A        if self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            return%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        if distancia %3E self.gas:%0A            kmPercorridos = self.gas%0A            self.quilometros += kmPercorridos%0A            self.gas = 0%0A            print(f%22fail: tanque vazio apos andar %7BkmPercorridos%7D km%22)%0A        else:%0A            self.gas -= distancia%0A            self.quilometros += distancia%0A%0A        %0Adef main():%0A    carro = Carro()%0A    while True:%0A        line: (str) = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            carro.show()%0A        elif args%5B0%5D == %22enter%22:%0A            carro.enter()%0A        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args%5B0%5D == %22fuel%22:%0A            qtd = int(args%5B1%5D)%0A            carro.abastecer(qtd)%0A        elif args%5B0%5D == %22drive%22:%0A            distance = int(args%5B1%5D)%0A            carro.drive(distance)%0A        else:%0A            print(%22fail: comando desconhecido%22)%0A%0Amain()\n+@@ -1390,16 +1390,70 @@%0A stancia%250A%0A+            print(f%2522andou %257Bdistancia%257D km com sucesso%2522)%0A %250A       %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-05_22-48-06",
            "content": "class Carro:\n    def __init__ (self, gasMax: int = 100, passMax: int = 2):\n        self.passageiros: int = 0\n        self.quilometros: int = 0\n        self.gas: int = 0\n        self.passMax: int = passMax\n        self.gasMax: int = gasMax\n\n    def __str__(self) -> str:\n        return f\"pass: {self.passageiros}, gas: {self.gas}, km: {self.quilometros}\"\n    \n    def show(self):\n        print (self)\n\n    def enter(self):\n        if self.passageiros >= self.passMax:\n            print(\"fail: limite de pessoas atingido\")\n        else:\n             self.passageiros += 1\n    \n    def leave(self):\n        if self.passageiros <= 0:\n            print(\"fail: nao ha ninguem no carro\")\n        else:\n            self.passageiros -= 1\n\n    def abastecer(self, qtd: int):\n        self.gas += qtd\n        if self.gas >= self.gasMax:\n            self.gas = self.gasMax\n        \n    def drive(self, distancia: int):\n        if self.passageiros == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n        if self.gas == 0:\n            print(\"fail: tanque vazio\")\n            return\n        if distancia > self.gas:\n            kmPercorridos = self.gas\n            self.quilometros += kmPercorridos\n            self.gas = 0\n            print(f\"fail: tanque vazio apos andar {kmPercorridos} km\")\n        else:\n            self.gas -= distancia\n            self.quilometros += distancia\n\n        \ndef main():\n    carro = Carro()\n    while True:\n        line: (str) = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            carro.show()\n        elif args[0] == \"enter\":\n            carro.enter()\n        elif args[0] == \"leave\":\n            carro.leave()\n        elif args[0] == \"fuel\":\n            qtd = int(args[1])\n            carro.abastecer(qtd)\n        elif args[0] == \"drive\":\n            distance = int(args[1])\n            carro.drive(distance)\n        else:\n            print(\"fail: comando desconhecido\")\n\nmain()",
            "lines": "73"
        }
    ]
}