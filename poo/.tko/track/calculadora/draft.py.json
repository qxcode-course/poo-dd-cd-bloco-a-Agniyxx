{
    "patches": [
        {
            "label": "2025-09-29_16-41-55",
            "content": "@@ -65,30 +65,8 @@\n  int\n-, batteryMax: int= 100\n ):%0A \n@@ -87,23 +87,16 @@\n splay = \n-display\n %0A       \n@@ -110,24 +110,16 @@\n attery =\n- battery\n %0A       \n@@ -137,26 +137,21 @@\n ryMax = \n-batteryMax\n+%0A%0A%0A%0A%0A\n %0A%0A    de\n@@ -202,21 +202,16 @@\n play = %7B\n-self.\n display:\n@@ -227,21 +227,16 @@\n tery = %7B\n-self.\n battery%7D\n@@ -240,285 +240,4 @@\n ry%7D%22\n-%0A    %0A    def recarregar(self, increment: int):%0A        if self.battery %3E= self.batteryMax:%0A         print(%22fail: limite de carga atingido%22)%0A        else:%0A             self.battery += 1%0A%0A    def soma(self):%0A        if %0A%0A        else:%0A            print(%22fail: bateria insuficiente%22)\n",
            "lines": "13"
        },
        {
            "label": "2025-10-04_16-15-12",
            "content": "@@ -34,16 +34,44 @@\n __(self,\n+ display: int, battery: int,\n  battery\n@@ -105,25 +105,31 @@\n f.display = \n-0\n+display\n %0A        sel\n@@ -140,17 +140,23 @@\n ttery = \n-0\n+battery\n %0A       \n@@ -496,389 +496,81 @@\n self\n-, a: int, b: int):%0A        if self.battery %3E 0:%0A            self.display = a + b%0A            self.battery -= 1%0A        else:%0A            print(%22fail: bateria insuficiente%22)%0A    %0A    def divis%C3%A3o(self, num: int, den: int):%0A        if self.battery %3E 0:%0A            self.display = num/den%0A            self.battery -= 1%0A        else:%0A            print(%22fail: bateria insuficiente%22)%0A        \n+):%0A        if %0A%0A        else:%0A            print(%22fail: bateria insuficiente%22)\n",
            "lines": "20"
        },
        {
            "label": "2025-10-04_16-26-16",
            "content": "@@ -688,74 +688,8 @@\n  if \n-den = 0:%0A            print(%22fail: divisao por zero%22)%0A        elif \n self\n",
            "lines": "29"
        },
        {
            "label": "2025-10-04_16-30-34",
            "content": "@@ -689,17 +689,16 @@\n if den =\n-=\n  0:%0A    \n",
            "lines": "31"
        },
        {
            "label": "2025-10-04_16-30-52",
            "content": "@@ -300,42 +300,8 @@\n t):%0A\n-        self.battery += increment%0A\n     \n@@ -900,18 +900,8 @@\n e%22)%0A\n-    %0A    %0A\n     \n",
            "lines": "31"
        },
        {
            "label": "2025-10-04_17-14-27",
            "content": "@@ -86,10 +86,8 @@\n  = 0\n-.0\n %0A   \n@@ -467,26 +467,12 @@\n ery \n++\n = \n-self.batteryMax%0A\n+1\n %0A%0A  \n@@ -495,22 +495,18 @@\n  a: \n-floa\n+in\n t, b: \n-floa\n+in\n t):%0A\n",
            "lines": "34"
        },
        {
            "label": "2025-10-05_20-16-17",
            "content": "@@ -476,32 +476,33 @@\n elf.batteryMax%0A%0A\n+%0A\n     def soma(sel\n@@ -959,17 +959,17 @@\n    %0A\n-def main():%0A\n+    %0A       \n  \n",
            "lines": "35"
        },
        {
            "label": "2025-10-05_20-21-44",
            "content": "@@ -967,10 +967,8 @@\n ain():%0A \n-%0A \n",
            "lines": "34"
        },
        {
            "label": "2025-10-05_22-50-29",
            "content": "@@ -971,213 +971,6 @@\n ):%0A \n+%0A\n  \n-  cal = Calculadora():%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D + line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22%22\n",
            "lines": "35"
        },
        {
            "label": "2025-10-05_23-00-53",
            "content": "@@ -989,17 +989,18 @@\n ladora()\n+:\n %0A\n-\n     whil\n@@ -1179,230 +1179,5 @@\n == %22\n-init%22:%0A            display = args%5B1%5D%0A            battery = args%5B2%5D%0A            cal = Calculadora(display, battery)%0A        elif args%5B0%5D == %22sum%22:%0A%0A        elif args%5B0%5D == %22charge%22:%0A            %0A        elif args%5B0%5D == %22show%22:%0A\n+%22\n",
            "lines": "41"
        },
        {
            "label": "2025-10-05_23-11-36",
            "content": "@@ -260,53 +260,8 @@\n    %0A\n-    def show(self):%0A        print(self)%0A    %0A\n     \n@@ -1324,30 +1324,8 @@\n m%22:%0A\n-            cal.soma()\n %0A   \n@@ -1371,24 +1371,8 @@\n     \n-cal.recarregar()\n %0A   \n@@ -1404,61 +1404,4 @@\n w%22:%0A\n-            cal.show()%0A        else:%0A            print()%0A\n",
            "lines": "49"
        },
        {
            "label": "2025-10-05_23-18-27",
            "content": "@@ -78,23 +78,16 @@\n .display\n-: float\n  = 0.0%0A \n@@ -105,21 +105,16 @@\n .battery\n-: int\n  = 0%0A   \n@@ -1386,21 +1386,16 @@\n al.soma(\n-a + b\n )%0A      \n@@ -1430,24 +1430,40 @@\n             \n+cal.recarregar()\n %0A        eli\n",
            "lines": "55"
        },
        {
            "label": "2025-10-05_23-23-09",
            "content": "@@ -1389,21 +1389,24 @@\n         \n-print\n+cal.soma\n (a + b)%0A\n@@ -1455,70 +1455,8 @@\n     \n-increment = int(args%5B1%5D)%0A            cal.recarregar(increment)\n %0A   \n@@ -1500,17 +1500,17 @@\n     \n-print(cal\n+cal.show(\n )%0A  \n",
            "lines": "55"
        },
        {
            "label": "2025-10-05_23-28-56",
            "content": "@@ -1140,16 +1140,18 @@\n ist%5Bstr%5D\n+ +\n  line.sp\n@@ -1290,28 +1290,23 @@\n ttery = \n-int(\n args%5B2%5D\n-)\n %0A       \n@@ -1393,197 +1393,20 @@\n     \n-if cal is None:%0A                print(f%22fail: calculadora n%C3%A3o iniciada%22)%0A                continue%0A            a = int(args%5B1%5D)%0A            b = int(args%5B2%5D)%0A            print(cal.soma(a,\n+print(a +\n  b)\n-)\n %0A   \n@@ -1440,93 +1440,8 @@\n e%22:%0A\n-            if cal is None:%0A                print(f%22fail: calculadora nao iniciada%22)%0A\n     \n@@ -1602,31 +1602,6 @@\n int(\n-f%22fail: comando invalido%22\n )%0A\n",
            "lines": "56"
        },
        {
            "label": "2025-10-05_23-38-30",
            "content": "@@ -1161,56 +1161,8 @@\n  %22)%0A\n-        if len(args) == 0:%0A            continue%0A\n     \n",
            "lines": "63"
        },
        {
            "label": "2025-10-05_23-42-15",
            "content": "@@ -1265,19 +1265,16 @@\n    elif \n-int\n args%5B0%5D \n@@ -1428,16 +1428,126 @@\n  %22sum%22:%0A\n+            if cal is None:%0A                print(f%22fail: calculadora n%C3%A3o iniciada%22)%0A                continue%0A\n         \n@@ -1664,16 +1664,101 @@\n harge%22:%0A\n+            if cal is None:%0A                print(f%22fail: calculadora nao iniciada%22)%0A\n         \n",
            "lines": "65"
        },
        {
            "label": "2025-10-05_23-43-56",
            "content": "class Calculadora:\n    def __init__(self, batteryMax: int= 100):\n        self.display: float = 0.0\n        self.battery: int = 0\n        self.batteryMax = batteryMax\n\n    def __str__(self) -> str:\n        return f\"display = {self.display:.2f}, battery = {self.battery}\"\n    \n    def show(self):\n        print(self)\n    \n    def recarregar(self, increment: int):\n        self.battery += increment\n        if self.battery >= self.batteryMax:\n         print(\"fail: limite de carga atingido\")\n        else:\n             self.battery = self.batteryMax\n\n    def soma(self, a: float, b: float):\n        if self.battery > 0:\n            self.display = a + b\n            self.battery -= 1\n        else:\n            print(\"fail: bateria insuficiente\")\n    \n    def divis\u00e3o(self, num: int, den: int):\n        if den == 0:\n            print(\"fail: divisao por zero\")\n        elif self.battery > 0:\n            self.display = num/den\n            self.battery -= 1\n        else:\n            print(\"fail: bateria insuficiente\")\n    \ndef main():\n    cal = Calculadora()\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] line.split(\" \")\n        if len(args) == 0:\n            continue\n        if args[0] == \"end\":\n            break\n        elif intargs[0] == \"init\":\n            display = args[1]\n            battery = int(args[2])\n            cal = Calculadora(display, battery)\n        elif args[0] == \"sum\":\n            a = int(args[1])\n            b = int(args[2])\n            print(cal.soma(a, b))\n        elif args[0] == \"charge\":\n            increment = int(args[1])\n            cal.recarregar(increment)\n        elif args[0] == \"show\":\n            print(cal)\n        else:\n            print(f\"fail: comando invalido\")\n",
            "lines": "60"
        }
    ]
}